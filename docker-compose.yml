#docker-compose.yml
services:
  web:
    image: ${DOCKER_USERNAME}/backend:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Web/Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_URLS=http://0.0.0.0:5000
      - JWTSETTINGS__SECRETKEY=${JWTSETTINGS__SECRETKEY}
      - ConnectionStrings__DefaultConnection=Server=mysql;Port=3306;Database=${DB_NAME};Uid=${DB_USERNAME};Pwd=${DB_PASSWORD};Allow User Variables=true;
      - EMAILSETTINGS__SMTPPASS=${EMAILSETTINGS__SMTPPASS}
      - PAYMENTSETTINGS__APIKEY=${PAYMENTSETTINGS__APIKEY}
      - GOOGLE_APPLICATION_CREDENTIALS_JSON=${GOOGLE_APPLICATION_CREDENTIALS_JSON}
    # restart: always
    volumes:
#        - ./src/Web/wwwroot/uploads:/app/wwwroot/uploads
      - web_uploads:/app/wwwroot/uploads
    user: "0:0"
    
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}   # root password
      - MYSQL_DATABASE=${DB_NAME}            # tÃªn DB
      - MYSQL_USER=${DB_USERNAME}            # user
      - MYSQL_PASSWORD=${DB_PASSWORD}        # password cho user
    ports:
      - "3307:3306"
    volumes:
      - mysqldata:/var/lib/mysql
    # restart: always
    deploy:
      resources:
        limits:
          cpus: "3.0"
          memory: 3G
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-p${DB_PASSWORD}" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s

volumes:
  web_uploads:
  mysqldata: