name: CI/CD Pipeline

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.10
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          TAG: ${{ github.sha }}
          ASPNETCORE_ENVIRONMENT: ${{ secrets.ASPNETCORE_ENVIRONMENT }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          GIT_AUTH_TOKEN: ${{ secrets.GIT_AUTH_TOKEN }}
          JWTSETTINGS__SECRETKEY: ${{ secrets.JWTSETTINGS__SECRETKEY }}
          EMAILSETTINGS__SMTPPASS: ${{ secrets.EMAILSETTINGS__SMTPPASS }}
          PAYMENTSETTINGS__APIKEY: ${{ secrets.PAYMENTSETTINGS__APIKEY }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: DOCKER_USERNAME,TAG,ASPNETCORE_ENVIRONMENT,DB_USERNAME,DB_PASSWORD,DB_NAME,GIT_AUTH_TOKEN,JWTSETTINGS__SECRETKEY,GOOGLESETTINGS__CLIENTID,GOOGLESETTINGS__CLIENTSECRET,EMAILSETTINGS__SMTPPASS,PAYMENTSETTINGS__APIKEY,GOOGLE_APPLICATION_CREDENTIALS_JSON,GEMINISETTINGS__APIKEY
          script: |
            # Cài git nếu chưa có
            echo "==> Cài đặt git nếu chưa có"
            if ! command -v git &> /dev/null; then
              sudo apt update
              sudo apt install git -y
            fi

            # Mở port 5000 
            echo "==> Mở port 5000"
            sudo ufw allow 5000 || true
            sudo ufw reload || true


            # Pull mã nguồn mới từ GitHub bằng token
            PROJECT_DIR="/home/backend"
            echo "==> Thư mục hiện tại là: $(pwd)"
            if [ ! -d "$PROJECT_DIR/.git" ]; then
              echo "==> Repo chưa tồn tại hoặc bị lỗi. Xóa và clone lại"
              rm -rf $PROJECT_DIR
              git clone https://x-access-token:${GIT_AUTH_TOKEN}@github.com/thanhkhac/PrintOnDemandShop.git $PROJECT_DIR
            else
              echo "==> Repo đã tồn tại. Pulling..."
              cd $PROJECT_DIR
              git pull
            fi

            echo "==> Thư mục hiện tại là: $(pwd)"

            # Ghi environment file
            echo "==> Ghi file .env"
            echo "DOCKER_USERNAME=$DOCKER_USERNAME" > .env
            echo "TAG=$TAG" >> .env
            echo "ASPNETCORE_ENVIRONMENT=$ASPNETCORE_ENVIRONMENT" >> .env
            echo "DB_USERNAME=$DB_USERNAME" >> .env
            echo "DB_PASSWORD=$DB_PASSWORD" >> .env
            echo "DB_NAME=$DB_NAME" >> .env
            echo "JWTSETTINGS__SECRETKEY=$JWTSETTINGS__SECRETKEY" >> .env
            echo "EMAILSETTINGS__SMTPPASS=\"$EMAILSETTINGS__SMTPPASS\"" >> .env
            echo "PAYMENTSETTINGS__APIKEY=\"$PAYMENTSETTINGS__APIKEY\"" >> .env
            
            
            echo "==> Thư mục hiện tại là: $(pwd)"
            cd $PROJECT_DIR || exit 1
            echo "==> Thư mục hiện tại là: $(pwd)"

            # Restart ứng dụng với build mới
            echo "==> Triển khai ứng dụng"
            docker compose -f docker-compose.yml -f docker-compose.nginx.yml down || true
            docker compose -f docker-compose.yml -f docker-compose.nginx.yml up --build -d
            echo "CD hoàn tất"